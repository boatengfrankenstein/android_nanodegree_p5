import org.ajoberstar.grgit.Grgit
import org.eclipse.jgit.errors.RepositoryNotFoundException

apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

//Version information
def versionMajor = VERSION_MAJOR.toInteger()
def versionMinor = VERSION_MINOR.toInteger()
def versionPatch = VERSION_PATCH.toInteger()
def versionRevision = getRevision()

def appVersionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100
def appVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion versions.androidSdk.compile
    buildToolsVersion versions.androidSdk.buildTools

    defaultConfig {
        applicationId "eu.bquepab.xyzreader"
        minSdkVersion versions.androidSdk.min
        targetSdkVersion versions.androidSdk.target

        versionCode appVersionCode
        versionName appVersionName
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
    }
}

dependencies {
    compile libraries.app.supportV4
    compile libraries.app.supportV13
    compile libraries.app.appCompat
    compile libraries.app.design
    compile libraries.app.palette
    compile libraries.app.recyclerview
    compile libraries.app.cardview
    compile libraries.app.okhttp
    compile libraries.app.materialDimens
    compile libraries.app.butterknife
    compile libraries.app.timber

    compile files('libs/volley.jar')

    annotationProcessor libraries.apt.butterknife
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        variant.mergedFlavor.versionName += "-${versionRevision}"
    }
}

def static getRevision() {
    def revision
    try {
        revision = getGitRevision()
    } catch (RepositoryNotFoundException e) {
        revision = 0
    }
    return revision
}

def static getGitRevision() {
    def git = Grgit.open(dir: '.')
    return git.head().abbreviatedId
}
